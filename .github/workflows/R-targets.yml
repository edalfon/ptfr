name: R targets pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    permissions:
      actions: read # Required to read details about other workflow runs
      contents: read
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v3

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: 'release'
          use-public-rspm: true

      # - name: Set up pandoc
      #   uses: r-lib/actions/setup-pandoc@v2

      - name: Install Quarto
        uses: quarto-dev/quarto-actions/setup@v2

      - name: Cache R packages
        uses: actions/cache@v3
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install dependencies
        run: |
          if (!require("remotes", quietly = TRUE)) install.packages("remotes", repos = "http://cran.us.r-project.org")
          remotes::install_deps(upgrade = "always"); remotes::install_github("edalfon/efun")
        shell: Rscript --vanilla {0}

      - name: Download artifact
        id: download-artifact
        uses: dawidd6/action-download-artifact@v11
        with:
          # Optional, GitHub token, a Personal Access Token with `public_repo` scope if needed
          # Required, if the artifact is from a different repo
          # Required, if the repo is private a Personal Access Token with `repo` scope is needed or GitHub token in a job where the permissions `action` scope set to `read`
          github_token: ${{secrets.GITHUB_TOKEN}}
          # Optional, workflow file name or ID
          # If not specified, will be inferred from run_id (if run_id is specified), or will be the current workflow
          #workflow: workflow_name.yml
          # If no workflow is set and workflow_search set to true, then the most recent workflow matching
          # all other criteria will be looked up instead of using the current workflow
          workflow_search: false
          # Optional, the status or conclusion of a completed workflow to search for
          # Can be one of a workflow conclusion:
          #   "failure", "success", "neutral", "cancelled", "skipped", "timed_out", "action_required"
          # Or a workflow status:
          #   "completed", "in_progress", "queued"
          # Use the empty string ("") to ignore status or conclusion in the search
          #workflow_conclusion: success
          workflow_conclusion: ""
          # Optional, will get head commit SHA
          #pr: ${{github.event.pull_request.number}}
          # Optional, no need to specify if PR is
          #commit: ${{github.event.pull_request.head.sha}}
          # Optional, will use the specified branch. Defaults to all branches
          #branch: master
          # Optional, branch/tag/commit ID to reference. This can supersede both
          # branch and commit above.
          #ref: master
          # Optional, defaults to all types
          #event: push
          # Optional, will use specified workflow run
          # use ${{ github.event.workflow_run.id }} when your action runs in a workflow_run event
          # and wants to download from the triggering workflow run
          #run_id: ${{ github.event.workflow_run.id }}
          # Optional, run number from the workflow
          #run_number: 34
          # Optional, uploaded artifact name,
          # will download all artifacts if not specified
          # and extract them into respective subdirectories
          # https://github.com/actions/download-artifact#download-all-artifacts
          # is treated as a regular expression if input name_is_regexp is true
          # will download only those artifacts with a name that matches this regular expression
          # https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_expressions
          name: targetsstore
          # Optional, name is treated as a regular expression if set true
          name_is_regexp: false
          # Optional, a directory where to extract artifact(s), defaults to the current directory
          #path: extract_here
          # Optional, defaults to current repo
          repo: ${{ github.repository }}
          # Optional, check the workflow run to whether it has an artifact
          # then will get the last available artifact from the previous workflow
          # default false, just try to download from the last one
          check_artifacts: false
          # Optional, search for the last workflow run whose stored an artifact named as in `name` input
          # default false
          search_artifacts: true
          # Optional, choose to skip unpacking the downloaded artifact(s)
          # default false
          skip_unpack: false
          # Optional, choose how to exit the action if no artifact is found
          # can be one of:
          #  "fail", "warn", "ignore"
          # default fail
          if_no_artifact_found: fail
          # Optional, include forks when searching for artifacts
          # default false
          allow_forks: true
          # Optional, choose to unpack the downloaded artifact(s) using `unzip` system utility
          # default false
          use_unzip: false
          # Optional, if multiple artifacts are found with `name_is_regexp` set to `true`, merge them into one directory
          # default false
          merge_multiple: false

      - name: Run targets pipeline
        id: run_targets_pipeline
        run: |
          options(crayon.enabled = TRUE)
          targets::tar_make()
        shell: Rscript {0}
        continue-on-error: true # do not fail, to let the artifact be created even for partial builds

      - name: Upload targets store
        uses: actions/upload-artifact@v4
        with:
          name: targetsstore
          path: targetsstore

      - name: Upload Quarto book
        if: steps.run_targets_pipeline.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: quartobook
          path: quartobook/_book


name: R targets pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    permissions:
      actions: read # Required to read details about other workflow runs
      contents: read
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v3

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: 'release'
          use-public-rspm: true

      # - name: Set up pandoc
      #   uses: r-lib/actions/setup-pandoc@v2

      - name: Install Quarto
        uses: quarto-dev/quarto-actions/setup@v2

      - name: Cache R packages
        uses: actions/cache@v3
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install dependencies
        run: |
          if (!require("remotes", quietly = TRUE)) install.packages("remotes", repos = "http://cran.us.r-project.org")
          remotes::install_deps(upgrade = "always"); remotes::install_github("edalfon/efun")
        shell: Rscript --vanilla {0}

      - name: Get latest workflow run
        id: get_run
        run: |
          run_id=$(gh api repos/${{ github.repository }}/actions/workflows/R-targets.yml/runs --jq '.workflow_runs | map(select(.conclusion=="success")) | .[0].id')
          echo "run_id=$run_id" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Download a single artifact
        id: download_artifact
        continue-on-error: true # artifact may not be available yet
        uses: actions/download-artifact@v5
        with:
          name: _targets
          github-token: ${{ secrets.GH_PAT }} # token with actions:read permissions on target repo, so it can read artifacts from previous workflow runs
          run-id: ${{ steps.get_run.outputs.run_id }}

      - name: Run targets pipeline
        id: run_targets_pipeline
        run: |
          options(crayon.enabled = TRUE)
          targets::tar_make()
        shell: Rscript {0}
        continue-on-error: true # do not fail, to let the artifact be created even for partial builds

      - name: Upload targets store
        uses: actions/upload-artifact@v4
        with:
          name: _targets
          path: _targets

      - name: Upload Quarto book
        if: steps.run_targets_pipeline.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: quartobook
          path: quartobook/_book


```{r}
#| eval: false
survey <- tar_read(siviru_survey) |> filter(!is.na(edad))
cont_var <- "edad"
grp_var <- "beneficia"
cont_lbl <- "Edad"
grp_lbl <- "Exposición al proyecto"
```

```{r}
cont_sym <- rlang::sym(cont_var)
grp_sym <- rlang::sym(grp_var)
survey_dict <- c(
  setNames(cont_lbl, cont_var),
  setNames(grp_lbl, grp_var),
  ecdf = "Función de Distribución Acumulativa Empírica (ECDF)"
)
probs <- c(0, 0.05, 0.25, 0.5, 0.75, 0.95, 1)
```

```{r}
#| tbl-cap: Media y desviación
cont_var_mean <- mean(survey[[cont_var]], na.rm = TRUE)
cont_var_sd <- sd(survey[[cont_var]], na.rm = TRUE)
cont_var_cv <- cont_var_sd / cont_var_mean

kable(
  data.frame(cont_var_mean, cont_var_sd, cont_var_cv),
  col.names = c("Media", "Desviación Estándar", "Coeficiente de Variación")
)
# tibble("Media" = cont_var_mean, "Desviación Estándar" = cont_var_sd) |>
# kableExtra::kable_styling(full_width = FALSE, position = "center")
```

```{r}
# gt::gt(tibble("Media" = cont_var_mean, "Desviación Estándar" = cont_var_sd))
```


```{r}
#| tbl-cap: Cuantiles
quantile(survey[[cont_var]], probs, na.rm = TRUE) |>
  t() |>
  kable()
```


```{r}
efun::denstogram(
  data = survey,
  xvar = !!cont_sym,
  xaxis_title = cont_lbl,
  yaxis_title = "Densidad",
  summary_geom = "line",
  plotly = FALSE
) +
  ggplot2::labs(dictionary = survey_dict)
```

```{r}
#| tbl-cap: Media y desviación

survey |>
  group_by(!!grp_sym) |>
  summarize(
    mean = mean(!!cont_sym, na.rm = TRUE),
    sd = sd(!!cont_sym, na.rm = TRUE),
    cv = sd / mean
  ) |>
  kable(
    col.names = c(
      grp_lbl,
      "Media",
      "Desviación Estándar",
      "Coeficiente de Variación"
    )
  )
```

```{r}
#| tbl-cap: Cuantiles

survey |>
  group_by(!!grp_sym) |>
  summarise(quants = list(quantile(!!cont_sym, probs, na.rm = TRUE))) |>
  tidyr::unnest_wider(quants) |>
  rename(!!grp_lbl := any_of(grp_var)) |>
  kable()
```

```{r}
efun::denstogram(
  data = survey,
  xvar = !!cont_sym,
  fillvar = !!grp_sym,
  xaxis_title = cont_lbl,
  yaxis_title = "Densidad",
  plotly = FALSE
) +
  ggplot2::labs(dictionary = survey_dict)
```

```{r}
# survey |> efun::ecdfgram(edad, grpvar = beneficia)
survey |>
  ggplot2::ggplot() +
  ggplot2::aes(x = !!cont_sym, color = !!grp_sym) +
  ggplot2::stat_ecdf(na.rm = TRUE, linewidth = 2) +
  ggplot2::labs(dictionary = survey_dict)
```


```{r}
survey |>
  ggplot2::ggplot() +
  ggplot2::aes(
    x = !!grp_sym,
    y = !!cont_sym,
    fill = !!grp_sym
  ) +
  ggplot2::geom_violin(trim = FALSE, alpha = 0.55) +
  ggplot2::geom_boxplot(width = 0.15) +
  ggforce::geom_sina(aes(color = !!grp_sym), alpha = .85, size = 3) +
  stat_summary(
    fun.y = mean,
    geom = "point",
    size = 3,
    color = "red",
    show.legend = FALSE
  ) +
  ggplot2::labs(dictionary = survey_dict)
```



```{r}
#| tbl-cap: Pruebas de diferencia de distribución y medidas de tendencia central

# TODO:
# Energy test (strong omnibus power)
# sizes <- base::as.integer(base::table(df$group))
# energy::eqdist.etest(x = base::matrix(df$age, ncol = 1), sizes = sizes, R = 1999)

# Split by group
vars_list <- base::split(survey[[cont_var]], survey[[grp_var]])

# Anderson–Darling k-sample (tail-sensitive)
test1 <- kSamples::ad.test(vars_list)
test2 <- stats::kruskal.test(
  formula = as.formula(paste(cont_var, "~", grp_var)),
  data = survey
)
test3 <- stats::oneway.test(
  as.formula(paste(cont_var, "~", grp_var)),
  var.equal = FALSE,
  data = survey
)

tibble(
  Test = c(
    "Anderson-Darling (k-sample, v1)",
    "Anderson-Darling (k-sample, v2)",
    "Kruskal–Wallis",
    "Welch ANOVA"
  ),
  Statistic = c(
    glue::glue("$AD = {test1$ad[1]} \\, (T_{{AD}}={test1$ad[3]})$"),
    glue::glue("$AD = {test1$ad[2]} \\, (T_{{AD}}={test1$ad[4]})$"),
    glue::glue("$\\chi^2({test2$parameter})={test2$statistic}$"),
    glue::glue("$F({paste(test3$parameter, collapse=', ')})={test3$statistic}$")
  ),
  `P-Value` = c(test1$ad[5], test1$ad[6], test2$p.value, test3$p.value)
) |>
  kable(align = "lcr")
```




```{r}
# TODO:

# 3) Post-hoc pairwise (only if the global test is significant)
# a) Location shifts (medians)
# stats::pairwise.wilcox.test(df$age, df$group, p.adjust.method = "BH")

# b) Full-distribution differences (energy test per pair)
# pairs <- utils::combn(base::levels(df$group), 2, simplify = FALSE)
# pvals <- base::numeric(base::length(pairs))
# nm    <- base::character(base::length(pairs))
# for (i in base::seq_along(pairs)) {
#   g <- pairs[[i]]
#   x <- df$age[df$group == g[1]]
#   y <- df$age[df$group == g[2]]
#   et <- energy::eqdist.etest(x = base::c(x, y),
#                              sizes = base::c(base::length(x), base::length(y)),
#                              R = 1999)
#   pvals[i] <- et$p.value; nm[i] <- base::paste(g, collapse = " vs ")
# }
# stats::p.adjust(pvals, method = "BH") |>
#   stats::setNames(nm)

# 4) Effect sizes (report along with p-values)

# Ordinal effect (robust), pairwise: Vargha–Delaney
# 𝐴
# A or Cliff’s delta

# eff_fun <- function(a, b) effsize::VD.A(a, b)  # or effsize::cliff.delta(a, b)
# es <- base::lapply(pairs, function(g) eff_fun(df$age[df$group==g[1]],
#                                               df$age[df$group==g[2]]))
# base::setNames(es, nm)

# Mean-based global effect: eta-squared from one-way ANOVA (if means matter)

# fit <- stats::aov(age ~ group, data = df)
# ss  <- summary(fit)[[1]][["Sum Sq"]]
# eta2 <- ss[1] / base::sum(ss); eta2  # proportion of variance explained by group

```




